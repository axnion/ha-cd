---
- hosts: all
  gather_facts: false
  tasks:
    - name: set rollback
      set_fact:
        rollback: false
    - name: set updated to false
      set_fact:
        updated: false


# Create runtime groups ---------------------------------------------------------
- hosts: app
  become: yes
  tasks:
    - name: Create group with blue/green machines
      group_by:
        key: "{{ group }}-app"
    - name: deploy test script  # REMOVE REMOVE REMOVE!
      copy:
        src: test.sh
        dest: /opt/test.sh
        mode: 0777



# Blue Deployment --------------------------------------------------------------
- hosts: blue-app
  become: yes
  strategy: linear
  tasks:
    - name: Include deployment tasks
      include_tasks: deployment_tasks.yml

    - name: Restoring blue from backups
      include_tasks: rollback_tasks.yml
      when: play_hosts | map('extract', hostvars, 'smoke_test') | selectattr('failed', 'equalto', true) | list | count > 0




# Switch to blue environment ---------------------------------------------------
- hosts: lb
  become: yes
  tasks:
    - name: Add blue servers to load balancers
      command: haproxyctl enable server web/"{{ hostvars[item]['inventory_hostname'] }}"
      when: hostvars[item]['group'] == 'blue'
      with_items: "{{ groups['app'] }}"

    - name: Remove green servers from load blancers
      command: haproxyctl disable server web/"{{ hostvars[item]['inventory_hostname'] }}"
      when: hostvars[item]['group'] == 'green'
      with_items: "{{ groups['app'] }}"




# Restore if rollback is requested ---------------------------------------------
- hosts: lb
  become: yes
  tasks:
    - name: Add green servers to load balancers
      command: haproxyctl enable server web/"{{ hostvars[item]['inventory_hostname'] }}"
      when: hostvars[item]['group'] == 'green' and rollback
      with_items: "{{ groups['app'] }}"

    - name: Remove blue servers from load blancers
      command: haproxyctl disable server web/"{{ hostvars[item]['inventory_hostname'] }}"
      when: hostvars[item]['group'] == 'blue' and rollback
      with_items: "{{ groups['app'] }}"

- hosts: blue-app
  become: yes
  tasks:
    - name: Rollback
      include_tasks: rollback_tasks.yml
      when: rollback




# Green Deployment -------------------------------------------------------------
- hosts: green-app
  become: yes
  serial: 1
  tasks:
    - name: Deploy to green
      include_tasks: deployment_tasks.yml

    - name: Add green application server to load blancers
      ignore_errors: true
      command: haproxyctl enable server web/"{{ inventory_hostname }}"
      delegate_to: "{{ item }}"
      with_items: "{{ groups['lb'] }}"
      when: smoke_test is succeeded
